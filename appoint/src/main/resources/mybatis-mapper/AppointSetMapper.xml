<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loskatt.appoint.mapper.AppointSetMapper">
  
    <resultMap id="BaseResultMap" type="com.loskatt.appoint.model.AppointSet">
        <id column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"></id>
        <result column="doctor_id" property="doctorId" javaType="java.lang.Long" jdbcType="BIGINT"></result>
        <result column="time_frame" property="timeFrame" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="user_num" property="userNum" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="surplus_num" property="surplusNum" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="status" property="status" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="update_time" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="create_time" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
    </resultMap>
    <select id="selectSettingForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <![CDATA[
            select * from t_appoint_setting where id=#{id} for update
        ]]>
    </select>
    <select id="selectSetting" resultMap="BaseResultMap">
            select * from t_appoint_setting where doctor_id=#{doctorId} and time_frame=#{timeFrame} limit 1 for update
    </select>

    <select id="loadSettingForDepart" resultMap="BaseResultMap" parameterType="java.lang.Long">
            select * from t_appoint_setting where depart_id = #{departId} and status = 1
    </select>
    
    <select id="loadSettingForDoctor" resultMap="BaseResultMap" parameterType="java.lang.Long">
            select * from t_appoint_setting where doctor_id = #{doctorId} and status = 1
    </select>
    
    <select id="countAppoints" resultType="java.lang.Integer">
  		 select (sum(ifnull(user_num,0)) - sum(ifnull(surplus_num,0)))  from t_appoint_setting where status = 1
	       <if test="appointSearch.departId != null and appointSearch.departId > 0">
               and depart_id = #{appointSearch.departId}
           </if>
           <if test="appointSearch.doctorId != null and appointSearch.doctorId > 0">
               and doctor_id = #{appointSearch.doctorId}
           </if>
   </select>
   
   <update id="clearSurplus">
        UPDATE t_appoint_setting
        <set>
             surplus_num = user_num
        </set>
   </update>
    <update id="updateStatus">
        UPDATE t_appoint_setting
        <set>
             status = #{status}
        </set>
        WHERE id = #{id}
    </update>
    <insert id="insertSetting" parameterType="com.loskatt.appoint.model.AppointSet" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO t_appoint_setting
        <trim prefix="(" suffix=")" suffixOverrides=",">
           doctor_id,
           time_frame,
           user_num,
           surplus_num,
           status,
           update_time,
           create_time
        </trim>
        <trim prefix=" VALUES (" suffix=")" suffixOverrides=",">
           #{doctorId},
           #{timeFrame},
           #{userNum},
           #{surplusNum},
           #{status},
           NOW(),
           NOW()
        </trim>
    </insert>
    
     <update id="updateSetting" parameterType="com.loskatt.appoint.model.AppointSet">
        UPDATE t_appoint_setting
        <set>
            <if test="timeFrame != null and timeFrame != ''">
                time_frame = #{timeFrame},
            </if>
            <if test="doctorId != null">
                doctor_id = #{doctorId},
            </if>
            <if test="userNum != null">
                user_num = #{userNum},
            </if>
            <if test="surplusNum != null">
                surplus_num = #{surplusNum},
            </if>
            <if test="status != null ">
                status = #{status},
            </if>
            update_time = NOW(),
        </set>
        WHERE id = #{id}
    </update>
    <update id="updateSurplusNum" parameterType="java.lang.Long">
        update t_appoint_setting
        <set>
            surplus_num = #{surplusNum}
        </set>
        WHERE id = #{id}
    </update>
    
    <delete id="deleteSetting" parameterType="java.lang.Long">
        delete from t_appoint_setting WHERE id = #{id}
    </delete>
    
    <resultMap id="AppointSetVOResultMap" type="com.loskatt.appoint.vo.AppointSetVO">
        <id column="id" property="id" javaType="java.lang.Long" jdbcType="BIGINT"></id>
        <result column="time_frame" property="timeFrame" javaType="java.lang.String" jdbcType="VARCHAR"></result>
        <result column="user_num" property="userNum" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="surplus_num" property="surplusNum" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="status" property="status" javaType="java.lang.Integer" jdbcType="INTEGER"></result>
        <result column="update_time" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="create_time" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <association property="depart" resultMap="com.loskatt.appoint.mapper.DepartMapper.baseResultMap"/>
        <association property="doctor" resultMap="com.loskatt.appoint.mapper.DoctorMapper.baseResultMap"/>
    </resultMap>
    
    <select id="getAppointSetList" resultMap="AppointSetVOResultMap">
	   		 select *, dp.id as depart_id, dp.status as depart_status, dc.id as doctor_id, dc.status as doctor_status from t_appoint_setting s
	   		 left join t_doctor dc on s.doctor_id = dc.id
             left join t_department dp on dc.depart_id = dp.id
		     where 1 = 1 
		     <if test="appointSearch.status != null">
                and s.status = #{appointSearch.status}
             </if>
			 <if test="appointSearch.departId != null and appointSearch.departId > 0">
                and s.depart_id = #{appointSearch.departId}
             </if>
             <if test="appointSearch.doctorId != null and appointSearch.doctorId > 0">
                and s.doctor_id = #{appointSearch.doctorId}
             </if>
			 order by s.create_time DESC
	         <if test="appointSearch.pageSize != null and appointSearch.pageSize > 0">
	             limit #{appointSearch.offset},#{appointSearch.pageSize}
	         </if>
   </select>
    
</mapper>